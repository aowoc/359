
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000fa2 	b	be90 <main>

Disassembly of section .text:

0000b080 <InGameMenuControl>:
    b080:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

0000b084 <gameMenuControllerRead$>:
    b084:	eb000084 	bl	b29c <ExtraLongDelayLoop>
    b088:	eb0000ca 	bl	b3b8 <ReadFromCont>
    b08c:	e59f1224 	ldr	r1, [pc, #548]	; b2b8 <extraDelayLoopLoop$+0x10>
    b090:	e1300001 	teq	r0, r1
    b094:	0afffffa 	beq	b084 <gameMenuControllerRead$>
    b098:	e59f121c 	ldr	r1, [pc, #540]	; b2bc <extraDelayLoopLoop$+0x14>
    b09c:	e1300001 	teq	r0, r1
    b0a0:	0a000009 	beq	b0cc <inGameMenuStartPress$>
    b0a4:	e59f1214 	ldr	r1, [pc, #532]	; b2c0 <extraDelayLoopLoop$+0x18>
    b0a8:	e1300001 	teq	r0, r1
    b0ac:	0a000009 	beq	b0d8 <inGameMenuAPress$>
    b0b0:	e59f120c 	ldr	r1, [pc, #524]	; b2c4 <extraDelayLoopLoop$+0x1c>
    b0b4:	e1300001 	teq	r0, r1
    b0b8:	0a000012 	beq	b108 <inGameMenuChangeSelection$>
    b0bc:	e59f1204 	ldr	r1, [pc, #516]	; b2c8 <extraDelayLoopLoop$+0x20>
    b0c0:	e1300001 	teq	r0, r1
    b0c4:	0a00000f 	beq	b108 <inGameMenuChangeSelection$>
    b0c8:	eaffffed 	b	b084 <gameMenuControllerRead$>

0000b0cc <inGameMenuStartPress$>:
    b0cc:	eb0000f8 	bl	b4b4 <DrawBoard>
    b0d0:	e3a00000 	mov	r0, #0
    b0d4:	ea000013 	b	b128 <gameMenuDone$>

0000b0d8 <inGameMenuAPress$>:
    b0d8:	e59f01ec 	ldr	r0, [pc, #492]	; b2cc <extraDelayLoopLoop$+0x24>
    b0dc:	e5901000 	ldr	r1, [r0]
    b0e0:	e3510000 	cmp	r1, #0
    b0e4:	1a000003 	bne	b0f8 <gameMenuQuitGame$>

0000b0e8 <gameMenuRestartGame$>:
    b0e8:	eb0000da 	bl	b458 <NewBoard>
    b0ec:	eb0000f0 	bl	b4b4 <DrawBoard>
    b0f0:	e3a00001 	mov	r0, #1
    b0f4:	ea00000b 	b	b128 <gameMenuDone$>

0000b0f8 <gameMenuQuitGame$>:
    b0f8:	eb00027a 	bl	bae8 <ClearScreen>
    b0fc:	eb00036f 	bl	bec0 <DrawMenus>
    b100:	e3a00002 	mov	r0, #2
    b104:	ea000007 	b	b128 <gameMenuDone$>

0000b108 <inGameMenuChangeSelection$>:
    b108:	eb0002c6 	bl	bc28 <MoveGameMenuSelect>
    b10c:	eaffffff 	b	b110 <gameMenuLetGo$>

0000b110 <gameMenuLetGo$>:
    b110:	eb00005a 	bl	b280 <LongDelayLoop>
    b114:	eb0000a7 	bl	b3b8 <ReadFromCont>
    b118:	e59f1198 	ldr	r1, [pc, #408]	; b2b8 <extraDelayLoopLoop$+0x10>
    b11c:	e1300001 	teq	r0, r1
    b120:	1afffffa 	bne	b110 <gameMenuLetGo$>
    b124:	eaffffd6 	b	b084 <gameMenuControllerRead$>

0000b128 <gameMenuDone$>:
    b128:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b12c <MainMenuControl>:
    b12c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

0000b130 <mainMenuControllerRead$>:
    b130:	eb000052 	bl	b280 <LongDelayLoop>
    b134:	eb00009f 	bl	b3b8 <ReadFromCont>
    b138:	e59f1178 	ldr	r1, [pc, #376]	; b2b8 <extraDelayLoopLoop$+0x10>
    b13c:	e1300001 	teq	r0, r1
    b140:	0afffffa 	beq	b130 <mainMenuControllerRead$>
    b144:	e59f1174 	ldr	r1, [pc, #372]	; b2c0 <extraDelayLoopLoop$+0x18>
    b148:	e1300001 	teq	r0, r1
    b14c:	0a000006 	beq	b16c <mainMenuAPress$>
    b150:	e59f116c 	ldr	r1, [pc, #364]	; b2c4 <extraDelayLoopLoop$+0x1c>
    b154:	e1300001 	teq	r0, r1
    b158:	0a00000c 	beq	b190 <mainMenuChangeSelection$>
    b15c:	e59f1164 	ldr	r1, [pc, #356]	; b2c8 <extraDelayLoopLoop$+0x20>
    b160:	e1300001 	teq	r0, r1
    b164:	0a000009 	beq	b190 <mainMenuChangeSelection$>
    b168:	eafffff0 	b	b130 <mainMenuControllerRead$>

0000b16c <mainMenuAPress$>:
    b16c:	e59f015c 	ldr	r0, [pc, #348]	; b2d0 <extraDelayLoopLoop$+0x28>
    b170:	e5901000 	ldr	r1, [r0]
    b174:	e3510000 	cmp	r1, #0
    b178:	1a000001 	bne	b184 <mainMenuQuitGame$>

0000b17c <mainMenuStartGame$>:
    b17c:	e3a00000 	mov	r0, #0
    b180:	ea00000a 	b	b1b0 <mainMenuDone$>

0000b184 <mainMenuQuitGame$>:
    b184:	eb000257 	bl	bae8 <ClearScreen>
    b188:	e3a00001 	mov	r0, #1
    b18c:	ea000007 	b	b1b0 <mainMenuDone$>

0000b190 <mainMenuChangeSelection$>:
    b190:	eb000369 	bl	bf3c <MainMenuSelect>
    b194:	eaffffff 	b	b198 <mainMenuLetGo$>

0000b198 <mainMenuLetGo$>:
    b198:	eb000038 	bl	b280 <LongDelayLoop>
    b19c:	eb000085 	bl	b3b8 <ReadFromCont>
    b1a0:	e59f1110 	ldr	r1, [pc, #272]	; b2b8 <extraDelayLoopLoop$+0x10>
    b1a4:	e1300001 	teq	r0, r1
    b1a8:	1afffffa 	bne	b198 <mainMenuLetGo$>
    b1ac:	eaffffdf 	b	b130 <mainMenuControllerRead$>

0000b1b0 <mainMenuDone$>:
    b1b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b1b4 <GameControl>:
    b1b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)

0000b1b8 <playerControl$>:
    b1b8:	eb000030 	bl	b280 <LongDelayLoop>
    b1bc:	eb00007d 	bl	b3b8 <ReadFromCont>
    b1c0:	e59f10f0 	ldr	r1, [pc, #240]	; b2b8 <extraDelayLoopLoop$+0x10>
    b1c4:	e1300001 	teq	r0, r1
    b1c8:	0afffffa 	beq	b1b8 <playerControl$>
    b1cc:	e59f10e8 	ldr	r1, [pc, #232]	; b2bc <extraDelayLoopLoop$+0x14>
    b1d0:	e1300001 	teq	r0, r1
    b1d4:	0a00000f 	beq	b218 <startPress$>
    b1d8:	e59f10e0 	ldr	r1, [pc, #224]	; b2c0 <extraDelayLoopLoop$+0x18>
    b1dc:	e1300001 	teq	r0, r1
    b1e0:	0a000015 	beq	b23c <aPress$>
    b1e4:	e59f10d8 	ldr	r1, [pc, #216]	; b2c4 <extraDelayLoopLoop$+0x1c>
    b1e8:	e1300001 	teq	r0, r1
    b1ec:	0a000014 	beq	b244 <upPress$>
    b1f0:	e59f10d0 	ldr	r1, [pc, #208]	; b2c8 <extraDelayLoopLoop$+0x20>
    b1f4:	e1300001 	teq	r0, r1
    b1f8:	0a000013 	beq	b24c <downPress$>
    b1fc:	e59f10d0 	ldr	r1, [pc, #208]	; b2d4 <extraDelayLoopLoop$+0x2c>
    b200:	e1300001 	teq	r0, r1
    b204:	0a000012 	beq	b254 <leftPress$>
    b208:	e59f10c8 	ldr	r1, [pc, #200]	; b2d8 <extraDelayLoopLoop$+0x30>
    b20c:	e1300001 	teq	r0, r1
    b210:	0a000011 	beq	b25c <rightPress$>
    b214:	eaffffe7 	b	b1b8 <playerControl$>

0000b218 <startPress$>:
    b218:	eb000246 	bl	bb38 <DrawInGameMenu>
    b21c:	ebffff97 	bl	b080 <InGameMenuControl>
    b220:	e3500000 	cmp	r0, #0
    b224:	0a00000e 	beq	b264 <letGo$>
    b228:	e3500001 	cmp	r0, #1
    b22c:	0affffe1 	beq	b1b8 <playerControl$>
    b230:	e3500002 	cmp	r0, #2
    b234:	0a000319 	beq	bea0 <mainMenu$>
    b238:	ea000009 	b	b264 <letGo$>

0000b23c <aPress$>:
    b23c:	eb000366 	bl	bfdc <ActionKey>
    b240:	ea000007 	b	b264 <letGo$>

0000b244 <upPress$>:
    b244:	eb0003ac 	bl	c0fc <MoveUp>
    b248:	ea000005 	b	b264 <letGo$>

0000b24c <downPress$>:
    b24c:	eb0003b6 	bl	c12c <MoveDown>
    b250:	ea000003 	b	b264 <letGo$>

0000b254 <leftPress$>:
    b254:	eb000390 	bl	c09c <MoveLeft>
    b258:	ea000001 	b	b264 <letGo$>

0000b25c <rightPress$>:
    b25c:	eb00039a 	bl	c0cc <MoveRight>
    b260:	eaffffff 	b	b264 <letGo$>

0000b264 <letGo$>:
    b264:	eb000005 	bl	b280 <LongDelayLoop>
    b268:	eb000052 	bl	b3b8 <ReadFromCont>
    b26c:	e59f1044 	ldr	r1, [pc, #68]	; b2b8 <extraDelayLoopLoop$+0x10>
    b270:	e1300001 	teq	r0, r1
    b274:	1afffffa 	bne	b264 <letGo$>
    b278:	eaffffce 	b	b1b8 <playerControl$>
    b27c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b280 <LongDelayLoop>:
    b280:	e92d4030 	push	{r4, r5, lr}
    b284:	e3a04000 	mov	r4, #0
    b288:	e59f504c 	ldr	r5, [pc, #76]	; b2dc <extraDelayLoopLoop$+0x34>

0000b28c <delayLoopLoop$>:
    b28c:	e2844001 	add	r4, r4, #1
    b290:	e1540005 	cmp	r4, r5
    b294:	3afffffc 	bcc	b28c <delayLoopLoop$>
    b298:	e8bd8030 	pop	{r4, r5, pc}

0000b29c <ExtraLongDelayLoop>:
    b29c:	e92d4030 	push	{r4, r5, lr}
    b2a0:	e3a04000 	mov	r4, #0
    b2a4:	e59f5034 	ldr	r5, [pc, #52]	; b2e0 <extraDelayLoopLoop$+0x38>

0000b2a8 <extraDelayLoopLoop$>:
    b2a8:	e2844001 	add	r4, r4, #1
    b2ac:	e1540005 	cmp	r4, r5
    b2b0:	3afffffc 	bcc	b2a8 <extraDelayLoopLoop$>
    b2b4:	e8bd8030 	pop	{r4, r5, pc}
    b2b8:	0000ffff 	.word	0x0000ffff
    b2bc:	0000fff7 	.word	0x0000fff7
    b2c0:	0000feff 	.word	0x0000feff
    b2c4:	0000ffef 	.word	0x0000ffef
    b2c8:	0000ffdf 	.word	0x0000ffdf
    b2cc:	0000b000 	.word	0x0000b000
    b2d0:	0000b06d 	.word	0x0000b06d
    b2d4:	0000ffbf 	.word	0x0000ffbf
    b2d8:	0000ff7f 	.word	0x0000ff7f
    b2dc:	000186a0 	.word	0x000186a0
    b2e0:	000f4240 	.word	0x000f4240

0000b2e4 <InitCont>:
    b2e4:	e92d4030 	push	{r4, r5, lr}
    b2e8:	e59f415c 	ldr	r4, [pc, #348]	; b44c <waitloop+0x14>
    b2ec:	e5940000 	ldr	r0, [r4]
    b2f0:	e3a01007 	mov	r1, #7
    b2f4:	e1a01181 	lsl	r1, r1, #3
    b2f8:	e1c00001 	bic	r0, r0, r1
    b2fc:	e3a02001 	mov	r2, #1
    b300:	e1a02182 	lsl	r2, r2, #3
    b304:	e1800002 	orr	r0, r0, r2
    b308:	e5840000 	str	r0, [r4]
    b30c:	e59f513c 	ldr	r5, [pc, #316]	; b450 <waitloop+0x18>
    b310:	e5950000 	ldr	r0, [r5]
    b314:	e3a01007 	mov	r1, #7
    b318:	e1a01d81 	lsl	r1, r1, #27
    b31c:	e1c00001 	bic	r0, r0, r1
    b320:	e3a02001 	mov	r2, #1
    b324:	e1a02d82 	lsl	r2, r2, #27
    b328:	e1800002 	orr	r0, r0, r2
    b32c:	e5850000 	str	r0, [r5]
    b330:	e5940000 	ldr	r0, [r4]
    b334:	e3a01007 	mov	r1, #7
    b338:	e1c00001 	bic	r0, r0, r1
    b33c:	e5840000 	str	r0, [r4]
    b340:	e8bd8030 	pop	{r4, r5, pc}

0000b344 <ReadData>:
    b344:	e92d4030 	push	{r4, r5, lr}
    b348:	e59f4100 	ldr	r4, [pc, #256]	; b450 <waitloop+0x18>
    b34c:	e3a0100a 	mov	r1, #10
    b350:	e5943034 	ldr	r3, [r4, #52]	; 0x34
    b354:	e3a02001 	mov	r2, #1
    b358:	e1a02112 	lsl	r2, r2, r1
    b35c:	e0033002 	and	r3, r3, r2
    b360:	e3330000 	teq	r3, #0
    b364:	03a00000 	moveq	r0, #0
    b368:	13a00001 	movne	r0, #1
    b36c:	e8bd8030 	pop	{r4, r5, pc}

0000b370 <WriteClock>:
    b370:	e92d4010 	push	{r4, lr}
    b374:	e59f40d4 	ldr	r4, [pc, #212]	; b450 <waitloop+0x18>
    b378:	e3a01001 	mov	r1, #1
    b37c:	e3a0200b 	mov	r2, #11
    b380:	e1a01211 	lsl	r1, r1, r2
    b384:	e3300000 	teq	r0, #0
    b388:	05841028 	streq	r1, [r4, #40]	; 0x28
    b38c:	1584101c 	strne	r1, [r4, #28]
    b390:	e8bd8010 	pop	{r4, pc}

0000b394 <WriteLatch>:
    b394:	e92d4010 	push	{r4, lr}
    b398:	e59f40b0 	ldr	r4, [pc, #176]	; b450 <waitloop+0x18>
    b39c:	e3a01001 	mov	r1, #1
    b3a0:	e3a02009 	mov	r2, #9
    b3a4:	e1a01211 	lsl	r1, r1, r2
    b3a8:	e3300000 	teq	r0, #0
    b3ac:	05841028 	streq	r1, [r4, #40]	; 0x28
    b3b0:	1584101c 	strne	r1, [r4, #28]
    b3b4:	e8bd8010 	pop	{r4, pc}

0000b3b8 <ReadFromCont>:
    b3b8:	e92d4030 	push	{r4, r5, lr}
    b3bc:	e3a05000 	mov	r5, #0
    b3c0:	e3a00001 	mov	r0, #1
    b3c4:	ebffffe9 	bl	b370 <WriteClock>
    b3c8:	e3a00001 	mov	r0, #1
    b3cc:	ebfffff0 	bl	b394 <WriteLatch>
    b3d0:	e3a0000c 	mov	r0, #12
    b3d4:	eb000013 	bl	b428 <Wait>
    b3d8:	ebffffed 	bl	b394 <WriteLatch>
    b3dc:	e3a04000 	mov	r4, #0

0000b3e0 <pulseloop>:
    b3e0:	e3a00006 	mov	r0, #6
    b3e4:	eb00000f 	bl	b428 <Wait>
    b3e8:	ebffffe0 	bl	b370 <WriteClock>
    b3ec:	e3a00006 	mov	r0, #6
    b3f0:	eb00000c 	bl	b428 <Wait>
    b3f4:	ebffffd2 	bl	b344 <ReadData>
    b3f8:	e3500001 	cmp	r0, #1
    b3fc:	1a000002 	bne	b40c <continue>
    b400:	e3a02001 	mov	r2, #1
    b404:	e1a02412 	lsl	r2, r2, r4
    b408:	e1855002 	orr	r5, r5, r2

0000b40c <continue>:
    b40c:	e3a00001 	mov	r0, #1
    b410:	ebffffd6 	bl	b370 <WriteClock>
    b414:	e2844001 	add	r4, r4, #1
    b418:	e3540010 	cmp	r4, #16
    b41c:	1affffef 	bne	b3e0 <pulseloop>
    b420:	e1a00005 	mov	r0, r5
    b424:	e8bd8030 	pop	{r4, r5, pc}

0000b428 <Wait>:
    b428:	e92d4010 	push	{r4, lr}
    b42c:	e59f4020 	ldr	r4, [pc, #32]	; b454 <waitloop+0x1c>
    b430:	e5941000 	ldr	r1, [r4]
    b434:	e0811000 	add	r1, r1, r0

0000b438 <waitloop>:
    b438:	e5942000 	ldr	r2, [r4]
    b43c:	e1510002 	cmp	r1, r2
    b440:	8afffffc 	bhi	b438 <waitloop>
    b444:	e3a00000 	mov	r0, #0
    b448:	e8bd8010 	pop	{r4, pc}
    b44c:	20200004 	.word	0x20200004
    b450:	20200000 	.word	0x20200000
    b454:	20003004 	.word	0x20003004

0000b458 <NewBoard>:
    b458:	e92d4070 	push	{r4, r5, r6, lr}
    b45c:	e59f4444 	ldr	r4, [pc, #1092]	; b8a8 <drawRow$+0x1c>
    b460:	e59f5444 	ldr	r5, [pc, #1092]	; b8ac <drawRow$+0x20>
    b464:	e3a06000 	mov	r6, #0

0000b468 <copyBoardLoop$>:
    b468:	e7d40006 	ldrb	r0, [r4, r6]
    b46c:	e7c50006 	strb	r0, [r5, r6]
    b470:	e2866001 	add	r6, r6, #1
    b474:	e3560c01 	cmp	r6, #256	; 0x100
    b478:	bafffffa 	blt	b468 <copyBoardLoop$>
    b47c:	e59f042c 	ldr	r0, [pc, #1068]	; b8b0 <drawRow$+0x24>
    b480:	e3a01000 	mov	r1, #0
    b484:	e5801000 	str	r1, [r0]
    b488:	e59f0424 	ldr	r0, [pc, #1060]	; b8b4 <drawRow$+0x28>
    b48c:	e3a01000 	mov	r1, #0
    b490:	e5801000 	str	r1, [r0]
    b494:	e59f041c 	ldr	r0, [pc, #1052]	; b8b8 <drawRow$+0x2c>
    b498:	e3a01096 	mov	r1, #150	; 0x96
    b49c:	e5801000 	str	r1, [r0]
    b4a0:	e59f0414 	ldr	r0, [pc, #1044]	; b8bc <drawRow$+0x30>
    b4a4:	e59f1414 	ldr	r1, [pc, #1044]	; b8c0 <drawRow$+0x34>
    b4a8:	e5912000 	ldr	r2, [r1]
    b4ac:	e5802000 	str	r2, [r0]
    b4b0:	e8bd8070 	pop	{r4, r5, r6, pc}

0000b4b4 <DrawBoard>:
    b4b4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b4b8:	e3a0502f 	mov	r5, #47	; 0x2f
    b4bc:	e59f73e8 	ldr	r7, [pc, #1000]	; b8ac <drawRow$+0x20>
    b4c0:	e3a08088 	mov	r8, #136	; 0x88
    b4c4:	e3a09000 	mov	r9, #0
    b4c8:	e3a04000 	mov	r4, #0

0000b4cc <drawCells$>:
    b4cc:	e1a00008 	mov	r0, r8
    b4d0:	e1a01009 	mov	r1, r9
    b4d4:	e7d72004 	ldrb	r2, [r7, r4]
    b4d8:	e3520000 	cmp	r2, #0
    b4dc:	0a000009 	beq	b508 <drawGrass$>
    b4e0:	e3520001 	cmp	r2, #1
    b4e4:	0a000009 	beq	b510 <drawWall$>
    b4e8:	e3520002 	cmp	r2, #2
    b4ec:	0a000009 	beq	b518 <drawKey$>
    b4f0:	e3520003 	cmp	r2, #3
    b4f4:	0a000009 	beq	b520 <drawDoor$>
    b4f8:	e3520004 	cmp	r2, #4
    b4fc:	0a00000b 	beq	b530 <drawExit$>
    b500:	e3520005 	cmp	r2, #5
    b504:	0a000007 	beq	b528 <drawCharacter$>

0000b508 <drawGrass$>:
    b508:	eb000019 	bl	b574 <DrawGrass>
    b50c:	ea000008 	b	b534 <checkRow$>

0000b510 <drawWall$>:
    b510:	eb00001b 	bl	b584 <DrawWall>
    b514:	ea000006 	b	b534 <checkRow$>

0000b518 <drawKey$>:
    b518:	eb00001d 	bl	b594 <DrawKey>
    b51c:	ea000004 	b	b534 <checkRow$>

0000b520 <drawDoor$>:
    b520:	eb00001f 	bl	b5a4 <DrawDoor>
    b524:	ea000002 	b	b534 <checkRow$>

0000b528 <drawCharacter$>:
    b528:	eb000021 	bl	b5b4 <DrawCharacter>
    b52c:	ea000000 	b	b534 <checkRow$>

0000b530 <drawExit$>:
    b530:	eb000023 	bl	b5c4 <DrawExit>

0000b534 <checkRow$>:
    b534:	e3a0afde 	mov	sl, #888	; 0x378
    b538:	e04aa005 	sub	sl, sl, r5
    b53c:	e158000a 	cmp	r8, sl
    b540:	1a000002 	bne	b550 <incrementXCoord$>
    b544:	e3a08088 	mov	r8, #136	; 0x88
    b548:	e0899005 	add	r9, r9, r5
    b54c:	ea000000 	b	b554 <icrementDraw$>

0000b550 <incrementXCoord$>:
    b550:	e0888005 	add	r8, r8, r5

0000b554 <icrementDraw$>:
    b554:	e2844001 	add	r4, r4, #1
    b558:	e3540c01 	cmp	r4, #256	; 0x100
    b55c:	baffffda 	blt	b4cc <drawCells$>
    b560:	eb0000af 	bl	b824 <DrawStart>
    b564:	eb00002a 	bl	b614 <DrawGrid>
    b568:	eb000041 	bl	b674 <DrawKeys>
    b56c:	eb00005a 	bl	b6dc <DrawActions>
    b570:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000b574 <DrawGrass>:
    b574:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b578:	e59f2344 	ldr	r2, [pc, #836]	; b8c4 <drawRow$+0x38>
    b57c:	eb000334 	bl	c254 <DrawSquare>
    b580:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b584 <DrawWall>:
    b584:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b588:	e59f2338 	ldr	r2, [pc, #824]	; b8c8 <drawRow$+0x3c>
    b58c:	eb000330 	bl	c254 <DrawSquare>
    b590:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b594 <DrawKey>:
    b594:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b598:	e59f232c 	ldr	r2, [pc, #812]	; b8cc <drawRow$+0x40>
    b59c:	eb00032c 	bl	c254 <DrawSquare>
    b5a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b5a4 <DrawDoor>:
    b5a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b5a8:	e3a02c0f 	mov	r2, #3840	; 0xf00
    b5ac:	eb000328 	bl	c254 <DrawSquare>
    b5b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b5b4 <DrawCharacter>:
    b5b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b5b8:	e59f2310 	ldr	r2, [pc, #784]	; b8d0 <drawRow$+0x44>
    b5bc:	eb000324 	bl	c254 <DrawSquare>
    b5c0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b5c4 <DrawExit>:
    b5c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b5c8:	e59f2304 	ldr	r2, [pc, #772]	; b8d4 <drawRow$+0x48>
    b5cc:	eb000320 	bl	c254 <DrawSquare>
    b5d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b5d4 <CellPixels>:
    b5d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    b5d8:	e1a04000 	mov	r4, r0
    b5dc:	e3a0502f 	mov	r5, #47	; 0x2f
    b5e0:	e1a06004 	mov	r6, r4
    b5e4:	e1a06226 	lsr	r6, r6, #4
    b5e8:	e0080596 	mul	r8, r6, r5
    b5ec:	e3a06000 	mov	r6, #0
    b5f0:	e0888006 	add	r8, r8, r6
    b5f4:	e1a06004 	mov	r6, r4
    b5f8:	e206600f 	and	r6, r6, #15
    b5fc:	e0070596 	mul	r7, r6, r5
    b600:	e3a06088 	mov	r6, #136	; 0x88
    b604:	e0877006 	add	r7, r7, r6
    b608:	e1a00007 	mov	r0, r7
    b60c:	e1a01008 	mov	r1, r8
    b610:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000b614 <DrawGrid>:
    b614:	e92d4070 	push	{r4, r5, r6, lr}
    b618:	e3a0502f 	mov	r5, #47	; 0x2f
    b61c:	e3a04088 	mov	r4, #136	; 0x88
    b620:	e3a06c11 	mov	r6, #4352	; 0x1100

0000b624 <drawGridY$>:
    b624:	e1a00004 	mov	r0, r4
    b628:	e3a01000 	mov	r1, #0
    b62c:	e1a02006 	mov	r2, r6
    b630:	e3a03e2f 	mov	r3, #752	; 0x2f0
    b634:	eb00031a 	bl	c2a4 <DrawLineY>
    b638:	e0844005 	add	r4, r4, r5
    b63c:	e3a03fde 	mov	r3, #888	; 0x378
    b640:	e1540003 	cmp	r4, r3
    b644:	dafffff6 	ble	b624 <drawGridY$>
    b648:	e3a04000 	mov	r4, #0

0000b64c <drawGridX$>:
    b64c:	e3a00088 	mov	r0, #136	; 0x88
    b650:	e1a01004 	mov	r1, r4
    b654:	e1a02006 	mov	r2, r6
    b658:	e3a03fde 	mov	r3, #888	; 0x378
    b65c:	eb00031d 	bl	c2d8 <DrawLineX>
    b660:	e0844005 	add	r4, r4, r5
    b664:	e3a03e2f 	mov	r3, #752	; 0x2f0
    b668:	e1540003 	cmp	r4, r3
    b66c:	dafffff6 	ble	b64c <drawGridX$>
    b670:	e8bd8070 	pop	{r4, r5, r6, pc}

0000b674 <DrawKeys>:
    b674:	e92d4030 	push	{r4, r5, lr}
    b678:	e3a0000e 	mov	r0, #14
    b67c:	ebffffd4 	bl	b5d4 <CellPixels>
    b680:	ebffffbf 	bl	b584 <DrawWall>
    b684:	ebffffe2 	bl	b614 <DrawGrid>
    b688:	e3a00088 	mov	r0, #136	; 0x88
    b68c:	e3a05f99 	mov	r5, #612	; 0x264
    b690:	e0800005 	add	r0, r0, r5
    b694:	e3a01000 	mov	r1, #0
    b698:	e281100f 	add	r1, r1, #15
    b69c:	e59f2234 	ldr	r2, [pc, #564]	; b8d8 <drawRow$+0x4c>
    b6a0:	e59f3234 	ldr	r3, [pc, #564]	; b8dc <drawRow$+0x50>
    b6a4:	eb0000ec 	bl	ba5c <DrawSentance>
    b6a8:	e59f4204 	ldr	r4, [pc, #516]	; b8b4 <drawRow$+0x28>
    b6ac:	e5940000 	ldr	r0, [r4]
    b6b0:	e59f1228 	ldr	r1, [pc, #552]	; b8e0 <drawRow$+0x54>
    b6b4:	eb000187 	bl	bcd8 <IntToString>
    b6b8:	e3a00088 	mov	r0, #136	; 0x88
    b6bc:	e59f5220 	ldr	r5, [pc, #544]	; b8e4 <drawRow$+0x58>
    b6c0:	e0800005 	add	r0, r0, r5
    b6c4:	e3a01000 	mov	r1, #0
    b6c8:	e281100f 	add	r1, r1, #15
    b6cc:	e3a02c0f 	mov	r2, #3840	; 0xf00
    b6d0:	e59f3208 	ldr	r3, [pc, #520]	; b8e0 <drawRow$+0x54>
    b6d4:	eb0000e0 	bl	ba5c <DrawSentance>
    b6d8:	e8bd8030 	pop	{r4, r5, pc}

0000b6dc <DrawActions>:
    b6dc:	e92d4010 	push	{r4, lr}
    b6e0:	e3a00005 	mov	r0, #5
    b6e4:	ebffffba 	bl	b5d4 <CellPixels>
    b6e8:	ebffffa5 	bl	b584 <DrawWall>
    b6ec:	ebffffc8 	bl	b614 <DrawGrid>
    b6f0:	e3a00088 	mov	r0, #136	; 0x88
    b6f4:	e2800037 	add	r0, r0, #55	; 0x37
    b6f8:	e3a01000 	mov	r1, #0
    b6fc:	e281100f 	add	r1, r1, #15
    b700:	e59f21d0 	ldr	r2, [pc, #464]	; b8d8 <drawRow$+0x4c>
    b704:	e59f31dc 	ldr	r3, [pc, #476]	; b8e8 <drawRow$+0x5c>
    b708:	eb0000d3 	bl	ba5c <DrawSentance>
    b70c:	e59f41a4 	ldr	r4, [pc, #420]	; b8b8 <drawRow$+0x2c>
    b710:	e5940000 	ldr	r0, [r4]
    b714:	e3500009 	cmp	r0, #9
    b718:	9a000009 	bls	b744 <oneLong$>
    b71c:	e3500063 	cmp	r0, #99	; 0x63
    b720:	9a000003 	bls	b734 <twoLong$>

0000b724 <threeLong$>:
    b724:	e59f11c0 	ldr	r1, [pc, #448]	; b8ec <drawRow$+0x60>
    b728:	eb00016a 	bl	bcd8 <IntToString>
    b72c:	e59f31b8 	ldr	r3, [pc, #440]	; b8ec <drawRow$+0x60>
    b730:	ea000006 	b	b750 <drawActionNumber$>

0000b734 <twoLong$>:
    b734:	e59f11b4 	ldr	r1, [pc, #436]	; b8f0 <drawRow$+0x64>
    b738:	eb000166 	bl	bcd8 <IntToString>
    b73c:	e59f31ac 	ldr	r3, [pc, #428]	; b8f0 <drawRow$+0x64>
    b740:	ea000002 	b	b750 <drawActionNumber$>

0000b744 <oneLong$>:
    b744:	e59f11a8 	ldr	r1, [pc, #424]	; b8f4 <drawRow$+0x68>
    b748:	eb000162 	bl	bcd8 <IntToString>
    b74c:	e59f31a0 	ldr	r3, [pc, #416]	; b8f4 <drawRow$+0x68>

0000b750 <drawActionNumber$>:
    b750:	e3a00088 	mov	r0, #136	; 0x88
    b754:	e28000eb 	add	r0, r0, #235	; 0xeb
    b758:	e3a01000 	mov	r1, #0
    b75c:	e281100f 	add	r1, r1, #15
    b760:	e3a02c0f 	mov	r2, #3840	; 0xf00
    b764:	eb0000bc 	bl	ba5c <DrawSentance>
    b768:	e8bd8010 	pop	{r4, pc}

0000b76c <YouLose>:
    b76c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b770:	eb0000dc 	bl	bae8 <ClearScreen>
    b774:	e3a00088 	mov	r0, #136	; 0x88
    b778:	e2800064 	add	r0, r0, #100	; 0x64
    b77c:	e3a01000 	mov	r1, #0
    b780:	e2811f4b 	add	r1, r1, #300	; 0x12c
    b784:	e3a02c0f 	mov	r2, #3840	; 0xf00
    b788:	e59f3168 	ldr	r3, [pc, #360]	; b8f8 <drawRow$+0x6c>
    b78c:	eb0000b2 	bl	ba5c <DrawSentance>
    b790:	e3a00088 	mov	r0, #136	; 0x88
    b794:	e28000eb 	add	r0, r0, #235	; 0xeb
    b798:	e3a01000 	mov	r1, #0
    b79c:	e2811e19 	add	r1, r1, #400	; 0x190
    b7a0:	e3a02a0f 	mov	r2, #61440	; 0xf000
    b7a4:	e59f3150 	ldr	r3, [pc, #336]	; b8fc <drawRow$+0x70>
    b7a8:	eb0000ab 	bl	ba5c <DrawSentance>

0000b7ac <loseReadLoop$>:
    b7ac:	ebffff01 	bl	b3b8 <ReadFromCont>
    b7b0:	e59f1148 	ldr	r1, [pc, #328]	; b900 <drawRow$+0x74>
    b7b4:	e1300001 	teq	r0, r1
    b7b8:	0afffffb 	beq	b7ac <loseReadLoop$>
    b7bc:	eb0000c9 	bl	bae8 <ClearScreen>
    b7c0:	ea0001b6 	b	bea0 <mainMenu$>
    b7c4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b7c8 <YouWin>:
    b7c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    b7cc:	eb0000c5 	bl	bae8 <ClearScreen>
    b7d0:	e3a00088 	mov	r0, #136	; 0x88
    b7d4:	e2800064 	add	r0, r0, #100	; 0x64
    b7d8:	e3a01000 	mov	r1, #0
    b7dc:	e2811f4b 	add	r1, r1, #300	; 0x12c
    b7e0:	e3a02c0f 	mov	r2, #3840	; 0xf00
    b7e4:	e59f3118 	ldr	r3, [pc, #280]	; b904 <drawRow$+0x78>
    b7e8:	eb00009b 	bl	ba5c <DrawSentance>
    b7ec:	e3a00088 	mov	r0, #136	; 0x88
    b7f0:	e28000eb 	add	r0, r0, #235	; 0xeb
    b7f4:	e3a01000 	mov	r1, #0
    b7f8:	e2811e19 	add	r1, r1, #400	; 0x190
    b7fc:	e3a02a0f 	mov	r2, #61440	; 0xf000
    b800:	e59f3100 	ldr	r3, [pc, #256]	; b908 <drawRow$+0x7c>
    b804:	eb000094 	bl	ba5c <DrawSentance>

0000b808 <winReadLoop$>:
    b808:	ebfffeea 	bl	b3b8 <ReadFromCont>
    b80c:	e59f10ec 	ldr	r1, [pc, #236]	; b900 <drawRow$+0x74>
    b810:	e1300001 	teq	r0, r1
    b814:	0affffe4 	beq	b7ac <loseReadLoop$>
    b818:	eb0000b2 	bl	bae8 <ClearScreen>
    b81c:	ea00019f 	b	bea0 <mainMenu$>
    b820:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000b824 <DrawStart>:
    b824:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    b828:	e59f008c 	ldr	r0, [pc, #140]	; b8bc <drawRow$+0x30>
    b82c:	e5904000 	ldr	r4, [r0]
    b830:	e59f0088 	ldr	r0, [pc, #136]	; b8c0 <drawRow$+0x34>
    b834:	e5905000 	ldr	r5, [r0]
    b838:	e1540005 	cmp	r4, r5
    b83c:	0a00000b 	beq	b870 <dontDrawStart$>
    b840:	e59f0068 	ldr	r0, [pc, #104]	; b8b0 <drawRow$+0x24>
    b844:	e5901000 	ldr	r1, [r0]
    b848:	e3510001 	cmp	r1, #1
    b84c:	0a00000a 	beq	b87c <drawStartDone$>

0000b850 <drawStartSquare$>:
    b850:	e59f0058 	ldr	r0, [pc, #88]	; b8b0 <drawRow$+0x24>
    b854:	e3a01001 	mov	r1, #1
    b858:	e5801000 	str	r1, [r0]
    b85c:	e1a00005 	mov	r0, r5
    b860:	ebffff5b 	bl	b5d4 <CellPixels>
    b864:	e59f20a0 	ldr	r2, [pc, #160]	; b90c <drawRow$+0x80>
    b868:	eb000279 	bl	c254 <DrawSquare>
    b86c:	ea000002 	b	b87c <drawStartDone$>

0000b870 <dontDrawStart$>:
    b870:	e59f0038 	ldr	r0, [pc, #56]	; b8b0 <drawRow$+0x24>
    b874:	e3a01000 	mov	r1, #0
    b878:	e5801000 	str	r1, [r0]

0000b87c <drawStartDone$>:
    b87c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000b880 <DrawCellRow>:
    b880:	e92d4030 	push	{r4, r5, lr}
    b884:	e1a04000 	mov	r4, r0
    b888:	e1a05001 	mov	r5, r1

0000b88c <drawRow$>:
    b88c:	e1a00004 	mov	r0, r4
    b890:	ebffff4f 	bl	b5d4 <CellPixels>
    b894:	eb00026e 	bl	c254 <DrawSquare>
    b898:	e2844001 	add	r4, r4, #1
    b89c:	e1540005 	cmp	r4, r5
    b8a0:	9afffff9 	bls	b88c <drawRow$>
    b8a4:	e8bd8030 	pop	{r4, r5, pc}
    b8a8:	0000915e 	.word	0x0000915e
    b8ac:	0000925e 	.word	0x0000925e
    b8b0:	00009090 	.word	0x00009090
    b8b4:	00009080 	.word	0x00009080
    b8b8:	00009084 	.word	0x00009084
    b8bc:	00009088 	.word	0x00009088
    b8c0:	0000908c 	.word	0x0000908c
    b8c4:	00002b20 	.word	0x00002b20
    b8c8:	00004040 	.word	0x00004040
    b8cc:	0000ff40 	.word	0x0000ff40
    b8d0:	0000f0f0 	.word	0x0000f0f0
    b8d4:	0000fff0 	.word	0x0000fff0
    b8d8:	0000dfa0 	.word	0x0000dfa0
    b8dc:	000090a2 	.word	0x000090a2
    b8e0:	000090a0 	.word	0x000090a0
    b8e4:	00000296 	.word	0x00000296
    b8e8:	000090b1 	.word	0x000090b1
    b8ec:	000090a8 	.word	0x000090a8
    b8f0:	000090ac 	.word	0x000090ac
    b8f4:	000090af 	.word	0x000090af
    b8f8:	000090c4 	.word	0x000090c4
    b8fc:	000090fa 	.word	0x000090fa
    b900:	0000ffff 	.word	0x0000ffff
    b904:	00009104 	.word	0x00009104
    b908:	00009136 	.word	0x00009136
    b90c:	0000faa0 	.word	0x0000faa0

0000b910 <InitFrameBuffer>:
    b910:	e92d4010 	push	{r4, lr}
    b914:	e59f4208 	ldr	r4, [pc, #520]	; bb24 <clearScreenLoop$+0x2c>
    b918:	e1a00004 	mov	r0, r4
    b91c:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    b920:	e3a01001 	mov	r1, #1
    b924:	eb00001c 	bl	b99c <MailboxWrite>
    b928:	e3a00001 	mov	r0, #1
    b92c:	eb000026 	bl	b9cc <MailboxRead>
    b930:	e3300000 	teq	r0, #0
    b934:	13a00000 	movne	r0, #0
    b938:	18bd8010 	popne	{r4, pc}

0000b93c <pointerWait$>:
    b93c:	e5940020 	ldr	r0, [r4, #32]
    b940:	e3300000 	teq	r0, #0
    b944:	0afffffc 	beq	b93c <pointerWait$>
    b948:	e59f11d8 	ldr	r1, [pc, #472]	; bb28 <clearScreenLoop$+0x30>
    b94c:	e5810000 	str	r0, [r1]
    b950:	e1a00004 	mov	r0, r4
    b954:	e8bd8010 	pop	{r4, pc}

0000b958 <DrawPixel>:
    b958:	e92d4010 	push	{r4, lr}
    b95c:	e59f31c0 	ldr	r3, [pc, #448]	; bb24 <clearScreenLoop$+0x2c>
    b960:	e5934004 	ldr	r4, [r3, #4]
    b964:	e2444001 	sub	r4, r4, #1
    b968:	e1510004 	cmp	r1, r4
    b96c:	81a0f00e 	movhi	pc, lr
    b970:	e5934000 	ldr	r4, [r3]
    b974:	e2444001 	sub	r4, r4, #1
    b978:	e1500004 	cmp	r0, r4
    b97c:	81a0f00e 	movhi	pc, lr
    b980:	e59f31a0 	ldr	r3, [pc, #416]	; bb28 <clearScreenLoop$+0x30>
    b984:	e5933000 	ldr	r3, [r3]
    b988:	e2844001 	add	r4, r4, #1
    b98c:	e0200491 	mla	r0, r1, r4, r0
    b990:	e0833080 	add	r3, r3, r0, lsl #1
    b994:	e1c320b0 	strh	r2, [r3]
    b998:	e8bd8010 	pop	{r4, pc}

0000b99c <MailboxWrite>:
    b99c:	e310000f 	tst	r0, #15
    b9a0:	11a0f00e 	movne	pc, lr
    b9a4:	e351000f 	cmp	r1, #15
    b9a8:	81a0f00e 	movhi	pc, lr
    b9ac:	e1a02000 	mov	r2, r0
    b9b0:	e59f0174 	ldr	r0, [pc, #372]	; bb2c <clearScreenLoop$+0x34>

0000b9b4 <wait1$>:
    b9b4:	e5903018 	ldr	r3, [r0, #24]
    b9b8:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    b9bc:	1afffffc 	bne	b9b4 <wait1$>
    b9c0:	e0822001 	add	r2, r2, r1
    b9c4:	e5802020 	str	r2, [r0, #32]
    b9c8:	e12fff1e 	bx	lr

0000b9cc <MailboxRead>:
    b9cc:	e350000f 	cmp	r0, #15
    b9d0:	81a0f00e 	movhi	pc, lr
    b9d4:	e1a01000 	mov	r1, r0
    b9d8:	e59f014c 	ldr	r0, [pc, #332]	; bb2c <clearScreenLoop$+0x34>

0000b9dc <rightmail$>:
    b9dc:	e5902018 	ldr	r2, [r0, #24]
    b9e0:	e3120301 	tst	r2, #67108864	; 0x4000000
    b9e4:	1afffffc 	bne	b9dc <rightmail$>
    b9e8:	e5902000 	ldr	r2, [r0]
    b9ec:	e202300f 	and	r3, r2, #15
    b9f0:	e1330001 	teq	r3, r1
    b9f4:	1afffff8 	bne	b9dc <rightmail$>
    b9f8:	e3c2000f 	bic	r0, r2, #15
    b9fc:	e12fff1e 	bx	lr

0000ba00 <DrawChars>:
    ba00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ba04:	e59f4124 	ldr	r4, [pc, #292]	; bb30 <clearScreenLoop$+0x38>
    ba08:	e0844203 	add	r4, r4, r3, lsl #4
    ba0c:	e1a0a002 	mov	sl, r2
    ba10:	e1a06001 	mov	r6, r1
    ba14:	e1a09000 	mov	r9, r0

0000ba18 <charLoop$>:
    ba18:	e1a05009 	mov	r5, r9
    ba1c:	e3a08001 	mov	r8, #1
    ba20:	e4d47001 	ldrb	r7, [r4], #1

0000ba24 <rowLoop$>:
    ba24:	e1170008 	tst	r7, r8
    ba28:	0a000003 	beq	ba3c <noPixel$>
    ba2c:	e1a00005 	mov	r0, r5
    ba30:	e1a01006 	mov	r1, r6
    ba34:	e1a0200a 	mov	r2, sl
    ba38:	ebffffc6 	bl	b958 <DrawPixel>

0000ba3c <noPixel$>:
    ba3c:	e2855001 	add	r5, r5, #1
    ba40:	e1a08088 	lsl	r8, r8, #1
    ba44:	e3180c01 	tst	r8, #256	; 0x100
    ba48:	0afffff5 	beq	ba24 <rowLoop$>
    ba4c:	e2866001 	add	r6, r6, #1
    ba50:	e314000f 	tst	r4, #15
    ba54:	1affffef 	bne	ba18 <charLoop$>
    ba58:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000ba5c <DrawSentance>:
    ba5c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    ba60:	e1a05000 	mov	r5, r0
    ba64:	e1a06001 	mov	r6, r1
    ba68:	e1a07002 	mov	r7, r2
    ba6c:	e1a04003 	mov	r4, r3
    ba70:	e3a09000 	mov	r9, #0
    ba74:	e5d48000 	ldrb	r8, [r4]

0000ba78 <drawSent$>:
    ba78:	e1a03008 	mov	r3, r8
    ba7c:	e1a00005 	mov	r0, r5
    ba80:	e1a01006 	mov	r1, r6
    ba84:	e1a02007 	mov	r2, r7
    ba88:	ebffffdc 	bl	ba00 <DrawChars>
    ba8c:	e2899001 	add	r9, r9, #1
    ba90:	e285500a 	add	r5, r5, #10
    ba94:	e7d48009 	ldrb	r8, [r4, r9]
    ba98:	e3580000 	cmp	r8, #0
    ba9c:	1afffff5 	bne	ba78 <drawSent$>
    baa0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

0000baa4 <DrawSelector>:
    baa4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    baa8:	e1a04000 	mov	r4, r0
    baac:	e1a05001 	mov	r5, r1
    bab0:	e1a06002 	mov	r6, r2
    bab4:	e1a07003 	mov	r7, r3
    bab8:	e3a0303e 	mov	r3, #62	; 0x3e
    babc:	e1a00004 	mov	r0, r4
    bac0:	e1a01005 	mov	r1, r5
    bac4:	e1a02006 	mov	r2, r6
    bac8:	ebffffcc 	bl	ba00 <DrawChars>
    bacc:	e0844007 	add	r4, r4, r7
    bad0:	e3a0303c 	mov	r3, #60	; 0x3c
    bad4:	e1a00004 	mov	r0, r4
    bad8:	e1a01005 	mov	r1, r5
    badc:	e1a02006 	mov	r2, r6
    bae0:	ebffffc6 	bl	ba00 <DrawChars>
    bae4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bae8 <ClearScreen>:
    bae8:	e92d4070 	push	{r4, r5, r6, lr}
    baec:	e3a04000 	mov	r4, #0
    baf0:	e3a05000 	mov	r5, #0
    baf4:	e3a0600f 	mov	r6, #15

0000baf8 <clearScreenLoop$>:
    baf8:	e1a00005 	mov	r0, r5
    bafc:	e1a01006 	mov	r1, r6
    bb00:	e59f202c 	ldr	r2, [pc, #44]	; bb34 <clearScreenLoop$+0x3c>
    bb04:	ebffff5d 	bl	b880 <DrawCellRow>
    bb08:	e2855010 	add	r5, r5, #16
    bb0c:	e2866010 	add	r6, r6, #16
    bb10:	e2844001 	add	r4, r4, #1
    bb14:	e3a00010 	mov	r0, #16
    bb18:	e1540000 	cmp	r4, r0
    bb1c:	3afffff5 	bcc	baf8 <clearScreenLoop$>
    bb20:	e8bd8070 	pop	{r4, r5, r6, pc}
    bb24:	0000a000 	.word	0x0000a000
    bb28:	0000a030 	.word	0x0000a030
    bb2c:	2000b880 	.word	0x2000b880
    bb30:	0000a034 	.word	0x0000a034
    bb34:	00000000 	.word	0x00000000

0000bb38 <DrawInGameMenu>:
    bb38:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    bb3c:	e3a04055 	mov	r4, #85	; 0x55
    bb40:	e3a0505a 	mov	r5, #90	; 0x5a
    bb44:	e3a06010 	mov	r6, #16
    bb48:	e3a07001 	mov	r7, #1

0000bb4c <drawBackground$>:
    bb4c:	e1a00004 	mov	r0, r4
    bb50:	e1a01005 	mov	r1, r5
    bb54:	e59f2148 	ldr	r2, [pc, #328]	; bca4 <doneSelect$+0x4>
    bb58:	ebffff48 	bl	b880 <DrawCellRow>
    bb5c:	e0844006 	add	r4, r4, r6
    bb60:	e0855006 	add	r5, r5, r6
    bb64:	e2877001 	add	r7, r7, #1
    bb68:	e3570006 	cmp	r7, #6
    bb6c:	9afffff6 	bls	bb4c <drawBackground$>

0000bb70 <drawBorder$>:
    bb70:	e3a04044 	mov	r4, #68	; 0x44
    bb74:	e3a0504b 	mov	r5, #75	; 0x4b
    bb78:	e3a07001 	mov	r7, #1
    bb7c:	e1a00004 	mov	r0, r4
    bb80:	e1a01005 	mov	r1, r5
    bb84:	e59f211c 	ldr	r2, [pc, #284]	; bca8 <doneSelect$+0x8>
    bb88:	ebffff3c 	bl	b880 <DrawCellRow>

0000bb8c <borderLoop$>:
    bb8c:	e59f2114 	ldr	r2, [pc, #276]	; bca8 <doneSelect$+0x8>
    bb90:	e1a00004 	mov	r0, r4
    bb94:	ebfffe8e 	bl	b5d4 <CellPixels>
    bb98:	eb0001ad 	bl	c254 <DrawSquare>
    bb9c:	e1a00005 	mov	r0, r5
    bba0:	ebfffe8b 	bl	b5d4 <CellPixels>
    bba4:	eb0001aa 	bl	c254 <DrawSquare>
    bba8:	e0844006 	add	r4, r4, r6
    bbac:	e0855006 	add	r5, r5, r6
    bbb0:	e2877001 	add	r7, r7, #1
    bbb4:	e3570007 	cmp	r7, #7
    bbb8:	9afffff3 	bls	bb8c <borderLoop$>
    bbbc:	e1a00004 	mov	r0, r4
    bbc0:	e1a01005 	mov	r1, r5
    bbc4:	e59f20dc 	ldr	r2, [pc, #220]	; bca8 <doneSelect$+0x8>
    bbc8:	ebffff2c 	bl	b880 <DrawCellRow>

0000bbcc <drawMenuItems$>:
    bbcc:	e59f00d8 	ldr	r0, [pc, #216]	; bcac <doneSelect$+0xc>
    bbd0:	e59f10d8 	ldr	r1, [pc, #216]	; bcb0 <doneSelect$+0x10>
    bbd4:	e59f20d8 	ldr	r2, [pc, #216]	; bcb4 <doneSelect$+0x14>
    bbd8:	e59f30d8 	ldr	r3, [pc, #216]	; bcb8 <doneSelect$+0x18>
    bbdc:	ebffff9e 	bl	ba5c <DrawSentance>
    bbe0:	e59f00d4 	ldr	r0, [pc, #212]	; bcbc <doneSelect$+0x1c>
    bbe4:	e3a01f5a 	mov	r1, #360	; 0x168
    bbe8:	e3a02eff 	mov	r2, #4080	; 0xff0
    bbec:	e59f30cc 	ldr	r3, [pc, #204]	; bcc0 <doneSelect$+0x20>
    bbf0:	ebffff99 	bl	ba5c <DrawSentance>
    bbf4:	e59f00c0 	ldr	r0, [pc, #192]	; bcbc <doneSelect$+0x1c>
    bbf8:	e59f10c4 	ldr	r1, [pc, #196]	; bcc4 <doneSelect$+0x24>
    bbfc:	e3a02eff 	mov	r2, #4080	; 0xff0
    bc00:	e59f30c0 	ldr	r3, [pc, #192]	; bcc8 <doneSelect$+0x28>
    bc04:	ebffff94 	bl	ba5c <DrawSentance>
    bc08:	e59f00bc 	ldr	r0, [pc, #188]	; bccc <doneSelect$+0x2c>
    bc0c:	e3a01001 	mov	r1, #1
    bc10:	e5801000 	str	r1, [r0]
    bc14:	eb000003 	bl	bc28 <MoveGameMenuSelect>
    bc18:	e59f00b0 	ldr	r0, [pc, #176]	; bcd0 <doneSelect$+0x30>
    bc1c:	e3a01000 	mov	r1, #0
    bc20:	e5801000 	str	r1, [r0]
    bc24:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bc28 <MoveGameMenuSelect>:
    bc28:	e92d4030 	push	{r4, r5, lr}
    bc2c:	e59f5098 	ldr	r5, [pc, #152]	; bccc <doneSelect$+0x2c>
    bc30:	e5954000 	ldr	r4, [r5]
    bc34:	e3540000 	cmp	r4, #0
    bc38:	0a00000c 	beq	bc70 <quitSelect$>

0000bc3c <startGameSelect$>:
    bc3c:	e59f0090 	ldr	r0, [pc, #144]	; bcd4 <doneSelect$+0x34>
    bc40:	e3a01f5a 	mov	r1, #360	; 0x168
    bc44:	e3a02a0f 	mov	r2, #61440	; 0xf000
    bc48:	e3a03096 	mov	r3, #150	; 0x96
    bc4c:	ebffff94 	bl	baa4 <DrawSelector>
    bc50:	e59f007c 	ldr	r0, [pc, #124]	; bcd4 <doneSelect$+0x34>
    bc54:	e59f1068 	ldr	r1, [pc, #104]	; bcc4 <doneSelect$+0x24>
    bc58:	e3a02000 	mov	r2, #0
    bc5c:	e3a03046 	mov	r3, #70	; 0x46
    bc60:	ebffff8f 	bl	baa4 <DrawSelector>
    bc64:	e3a00000 	mov	r0, #0
    bc68:	e5850000 	str	r0, [r5]
    bc6c:	ea00000b 	b	bca0 <doneSelect$>

0000bc70 <quitSelect$>:
    bc70:	e59f005c 	ldr	r0, [pc, #92]	; bcd4 <doneSelect$+0x34>
    bc74:	e59f1048 	ldr	r1, [pc, #72]	; bcc4 <doneSelect$+0x24>
    bc78:	e3a02a0f 	mov	r2, #61440	; 0xf000
    bc7c:	e3a03046 	mov	r3, #70	; 0x46
    bc80:	ebffff87 	bl	baa4 <DrawSelector>
    bc84:	e59f0048 	ldr	r0, [pc, #72]	; bcd4 <doneSelect$+0x34>
    bc88:	e3a01f5a 	mov	r1, #360	; 0x168
    bc8c:	e3a02000 	mov	r2, #0
    bc90:	e3a03096 	mov	r3, #150	; 0x96
    bc94:	ebffff82 	bl	baa4 <DrawSelector>
    bc98:	e3a00001 	mov	r0, #1
    bc9c:	e5850000 	str	r0, [r5]

0000bca0 <doneSelect$>:
    bca0:	e8bd8030 	pop	{r4, r5, pc}
    bca4:	00000000 	.word	0x00000000
    bca8:	0000f222 	.word	0x0000f222
    bcac:	000001db 	.word	0x000001db
    bcb0:	00000113 	.word	0x00000113
    bcb4:	0000f0f0 	.word	0x0000f0f0
    bcb8:	0000b004 	.word	0x0000b004
    bcbc:	0000019a 	.word	0x0000019a
    bcc0:	0000b00e 	.word	0x0000b00e
    bcc4:	0000019f 	.word	0x0000019f
    bcc8:	0000b01b 	.word	0x0000b01b
    bccc:	0000b000 	.word	0x0000b000
    bcd0:	00009090 	.word	0x00009090
    bcd4:	00000186 	.word	0x00000186

0000bcd8 <IntToString>:
    bcd8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    bcdc:	e1a05000 	mov	r5, r0
    bce0:	e1a06001 	mov	r6, r1
    bce4:	e3a04000 	mov	r4, #0

0000bce8 <toStringLoop$>:
    bce8:	e1a00005 	mov	r0, r5
    bcec:	e3a0100a 	mov	r1, #10
    bcf0:	eb000020 	bl	bd78 <ModularDivision>
    bcf4:	e3a07030 	mov	r7, #48	; 0x30
    bcf8:	e0800007 	add	r0, r0, r7
    bcfc:	e7c60004 	strb	r0, [r6, r4]
    bd00:	e2844001 	add	r4, r4, #1
    bd04:	e1a00005 	mov	r0, r5
    bd08:	e3a0100a 	mov	r1, #10
    bd0c:	eb000007 	bl	bd30 <DivideTwoNum>
    bd10:	e1a05000 	mov	r5, r0
    bd14:	e3550001 	cmp	r5, #1
    bd18:	aafffff2 	bge	bce8 <toStringLoop$>
    bd1c:	e3540001 	cmp	r4, #1
    bd20:	0a000001 	beq	bd2c <toStringDone$>
    bd24:	e1a00006 	mov	r0, r6
    bd28:	eb00001d 	bl	bda4 <FlipString>

0000bd2c <toStringDone$>:
    bd2c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bd30 <DivideTwoNum>:
    bd30:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    bd34:	e1a05000 	mov	r5, r0
    bd38:	e1a06001 	mov	r6, r1
    bd3c:	e3a04001 	mov	r4, #1

0000bd40 <Div1>:
    bd40:	e3560102 	cmp	r6, #-2147483648	; 0x80000000
    bd44:	31560005 	cmpcc	r6, r5
    bd48:	31a06086 	lslcc	r6, r6, #1
    bd4c:	31a04084 	lslcc	r4, r4, #1
    bd50:	3afffffa 	bcc	bd40 <Div1>
    bd54:	e3a07000 	mov	r7, #0

0000bd58 <Div2>:
    bd58:	e1550006 	cmp	r5, r6
    bd5c:	20455006 	subcs	r5, r5, r6
    bd60:	20877004 	addcs	r7, r7, r4
    bd64:	e1b040a4 	lsrs	r4, r4, #1
    bd68:	11a060a6 	lsrne	r6, r6, #1
    bd6c:	1afffff9 	bne	bd58 <Div2>

0000bd70 <done>:
    bd70:	e1a00007 	mov	r0, r7
    bd74:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bd78 <ModularDivision>:
    bd78:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    bd7c:	e1a04000 	mov	r4, r0
    bd80:	e1a05001 	mov	r5, r1
    bd84:	e1a00004 	mov	r0, r4
    bd88:	e1a01005 	mov	r1, r5
    bd8c:	ebffffe7 	bl	bd30 <DivideTwoNum>
    bd90:	e1a06000 	mov	r6, r0
    bd94:	e0000596 	mul	r0, r6, r5
    bd98:	e0447000 	sub	r7, r4, r0
    bd9c:	e1a00007 	mov	r0, r7
    bda0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bda4 <FlipString>:
    bda4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    bda8:	e3a04000 	mov	r4, #0
    bdac:	e1a05000 	mov	r5, r0
    bdb0:	e1a00005 	mov	r0, r5
    bdb4:	eb00000a 	bl	bde4 <StringLength>
    bdb8:	e1a07000 	mov	r7, r0
    bdbc:	e2477001 	sub	r7, r7, #1

0000bdc0 <flipLoop$>:
    bdc0:	e7d56004 	ldrb	r6, [r5, r4]
    bdc4:	e7d50007 	ldrb	r0, [r5, r7]
    bdc8:	e7c50004 	strb	r0, [r5, r4]
    bdcc:	e7c56007 	strb	r6, [r5, r7]
    bdd0:	e2844001 	add	r4, r4, #1
    bdd4:	e2477001 	sub	r7, r7, #1
    bdd8:	e1540007 	cmp	r4, r7
    bddc:	3afffff7 	bcc	bdc0 <flipLoop$>
    bde0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000bde4 <StringLength>:
    bde4:	e92d4070 	push	{r4, r5, r6, lr}
    bde8:	e5d56000 	ldrb	r6, [r5]

0000bdec <lengthLoop$>:
    bdec:	e2844001 	add	r4, r4, #1
    bdf0:	e7d56004 	ldrb	r6, [r5, r4]
    bdf4:	e3560000 	cmp	r6, #0
    bdf8:	1afffffb 	bne	bdec <lengthLoop$>
    bdfc:	e1a00004 	mov	r0, r4
    be00:	e8bd8070 	pop	{r4, r5, r6, pc}

0000be04 <EnableJTAG>:
    be04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    be08:	e59f0064 	ldr	r0, [pc, #100]	; be74 <dowaitloop+0xc>
    be0c:	e0211001 	eor	r1, r1, r1
    be10:	e5801000 	str	r1, [r0]
    be14:	eb000012 	bl	be64 <dowait>
    be18:	e59f0058 	ldr	r0, [pc, #88]	; be78 <dowaitloop+0x10>
    be1c:	e59f1058 	ldr	r1, [pc, #88]	; be7c <dowaitloop+0x14>
    be20:	e5801000 	str	r1, [r0]
    be24:	eb00000e 	bl	be64 <dowait>
    be28:	e0211001 	eor	r1, r1, r1
    be2c:	e5801000 	str	r1, [r0]
    be30:	e59f0048 	ldr	r0, [pc, #72]	; be80 <dowaitloop+0x18>
    be34:	e5901000 	ldr	r1, [r0]
    be38:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    be3c:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    be40:	e5801000 	str	r1, [r0]
    be44:	e59f0038 	ldr	r0, [pc, #56]	; be84 <dowaitloop+0x1c>
    be48:	e5901000 	ldr	r1, [r0]
    be4c:	e59f2034 	ldr	r2, [pc, #52]	; be88 <dowaitloop+0x20>
    be50:	e1c11002 	bic	r1, r1, r2
    be54:	e59f2030 	ldr	r2, [pc, #48]	; be8c <dowaitloop+0x24>
    be58:	e1811002 	orr	r1, r1, r2
    be5c:	e5801000 	str	r1, [r0]
    be60:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000be64 <dowait>:
    be64:	e3a02f4b 	mov	r2, #300	; 0x12c

0000be68 <dowaitloop>:
    be68:	e2522001 	subs	r2, r2, #1
    be6c:	1afffffd 	bne	be68 <dowaitloop>
    be70:	e12fff1e 	bx	lr
    be74:	20200094 	.word	0x20200094
    be78:	20200098 	.word	0x20200098
    be7c:	0bc00010 	.word	0x0bc00010
    be80:	20200000 	.word	0x20200000
    be84:	20200008 	.word	0x20200008
    be88:	00e3ffc0 	.word	0x00e3ffc0
    be8c:	0061b6c0 	.word	0x0061b6c0

0000be90 <main>:
    be90:	e3a0d902 	mov	sp, #32768	; 0x8000
    be94:	ebffffda 	bl	be04 <EnableJTAG>
    be98:	ebfffe9c 	bl	b910 <InitFrameBuffer>
    be9c:	ebfffd10 	bl	b2e4 <InitCont>

0000bea0 <mainMenu$>:
    bea0:	eb000006 	bl	bec0 <DrawMenus>
    bea4:	ebfffca0 	bl	b12c <MainMenuControl>
    bea8:	e3500000 	cmp	r0, #0
    beac:	1a000002 	bne	bebc <haltLoop$>

0000beb0 <startGame$>:
    beb0:	ebfffd68 	bl	b458 <NewBoard>
    beb4:	ebfffd7e 	bl	b4b4 <DrawBoard>
    beb8:	ebfffcbd 	bl	b1b4 <GameControl>

0000bebc <haltLoop$>:
    bebc:	eafffffe 	b	bebc <haltLoop$>

0000bec0 <DrawMenus>:
    bec0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    bec4:	e3a000a0 	mov	r0, #160	; 0xa0
    bec8:	e3a010c8 	mov	r1, #200	; 0xc8
    becc:	e59f20e4 	ldr	r2, [pc, #228]	; bfb8 <doneSelect$+0x4>
    bed0:	e59f30e4 	ldr	r3, [pc, #228]	; bfbc <doneSelect$+0x8>
    bed4:	ebfffee0 	bl	ba5c <DrawSentance>
    bed8:	e3a000a0 	mov	r0, #160	; 0xa0
    bedc:	e3a010fa 	mov	r1, #250	; 0xfa
    bee0:	e3a02eff 	mov	r2, #4080	; 0xff0
    bee4:	e59f30d4 	ldr	r3, [pc, #212]	; bfc0 <doneSelect$+0xc>
    bee8:	ebfffedb 	bl	ba5c <DrawSentance>
    beec:	e3a000a0 	mov	r0, #160	; 0xa0
    bef0:	e3a01f4b 	mov	r1, #300	; 0x12c
    bef4:	e3a02eff 	mov	r2, #4080	; 0xff0
    bef8:	e59f30c4 	ldr	r3, [pc, #196]	; bfc4 <doneSelect$+0x10>
    befc:	ebfffed6 	bl	ba5c <DrawSentance>
    bf00:	e3a00e19 	mov	r0, #400	; 0x190
    bf04:	e3a01064 	mov	r1, #100	; 0x64
    bf08:	e59f20b8 	ldr	r2, [pc, #184]	; bfc8 <doneSelect$+0x14>
    bf0c:	e59f30b8 	ldr	r3, [pc, #184]	; bfcc <doneSelect$+0x18>
    bf10:	ebfffed1 	bl	ba5c <DrawSentance>
    bf14:	e3a00f4b 	mov	r0, #300	; 0x12c
    bf18:	e3a01f7d 	mov	r1, #500	; 0x1f4
    bf1c:	e59f20ac 	ldr	r2, [pc, #172]	; bfd0 <doneSelect$+0x1c>
    bf20:	e59f30ac 	ldr	r3, [pc, #172]	; bfd4 <doneSelect$+0x20>
    bf24:	ebfffecc 	bl	ba5c <DrawSentance>
    bf28:	e59f00a8 	ldr	r0, [pc, #168]	; bfd8 <doneSelect$+0x24>
    bf2c:	e3a01001 	mov	r1, #1
    bf30:	e5801000 	str	r1, [r0]
    bf34:	eb000000 	bl	bf3c <MainMenuSelect>
    bf38:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000bf3c <MainMenuSelect>:
    bf3c:	e92d4030 	push	{r4, r5, lr}
    bf40:	e59f5090 	ldr	r5, [pc, #144]	; bfd8 <doneSelect$+0x24>
    bf44:	e5954000 	ldr	r4, [r5]
    bf48:	e3540000 	cmp	r4, #0
    bf4c:	0a00000c 	beq	bf84 <quitGameSelect$>

0000bf50 <startGameSelect$>:
    bf50:	e3a0008c 	mov	r0, #140	; 0x8c
    bf54:	e3a010fa 	mov	r1, #250	; 0xfa
    bf58:	e3a02a0f 	mov	r2, #61440	; 0xf000
    bf5c:	e3a03082 	mov	r3, #130	; 0x82
    bf60:	ebfffecf 	bl	baa4 <DrawSelector>
    bf64:	e3a0008c 	mov	r0, #140	; 0x8c
    bf68:	e3a01f4b 	mov	r1, #300	; 0x12c
    bf6c:	e3a02000 	mov	r2, #0
    bf70:	e3a03078 	mov	r3, #120	; 0x78
    bf74:	ebfffeca 	bl	baa4 <DrawSelector>
    bf78:	e3a00000 	mov	r0, #0
    bf7c:	e5850000 	str	r0, [r5]
    bf80:	ea00000b 	b	bfb4 <doneSelect$>

0000bf84 <quitGameSelect$>:
    bf84:	e3a0008c 	mov	r0, #140	; 0x8c
    bf88:	e3a01f4b 	mov	r1, #300	; 0x12c
    bf8c:	e3a02a0f 	mov	r2, #61440	; 0xf000
    bf90:	e3a03078 	mov	r3, #120	; 0x78
    bf94:	ebfffec2 	bl	baa4 <DrawSelector>
    bf98:	e3a0008c 	mov	r0, #140	; 0x8c
    bf9c:	e3a010fa 	mov	r1, #250	; 0xfa
    bfa0:	e3a02000 	mov	r2, #0
    bfa4:	e3a03082 	mov	r3, #130	; 0x82
    bfa8:	ebfffebd 	bl	baa4 <DrawSelector>
    bfac:	e3a00001 	mov	r0, #1
    bfb0:	e5850000 	str	r0, [r5]

0000bfb4 <doneSelect$>:
    bfb4:	e8bd8030 	pop	{r4, r5, pc}
    bfb8:	0000f0f0 	.word	0x0000f0f0
    bfbc:	0000b020 	.word	0x0000b020
    bfc0:	0000b02a 	.word	0x0000b02a
    bfc4:	0000b035 	.word	0x0000b035
    bfc8:	000022f0 	.word	0x000022f0
    bfcc:	0000b03f 	.word	0x0000b03f
    bfd0:	0000afa0 	.word	0x0000afa0
    bfd4:	0000b051 	.word	0x0000b051
    bfd8:	0000b06d 	.word	0x0000b06d

0000bfdc <ActionKey>:
    bfdc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    bfe0:	e59f025c 	ldr	r0, [pc, #604]	; c244 <actionSubDone$+0x8>
    bfe4:	e5901000 	ldr	r1, [r0]
    bfe8:	e3510000 	cmp	r1, #0
    bfec:	0a000029 	beq	c098 <keyDone$>
    bff0:	e59f7250 	ldr	r7, [pc, #592]	; c248 <actionSubDone$+0xc>
    bff4:	e59f0250 	ldr	r0, [pc, #592]	; c24c <actionSubDone$+0x10>
    bff8:	e5904000 	ldr	r4, [r0]
    bffc:	e3a08003 	mov	r8, #3

0000c000 <lookLoop$>:
    c000:	e2445001 	sub	r5, r4, #1
    c004:	e7d76005 	ldrb	r6, [r7, r5]
    c008:	e1560008 	cmp	r6, r8
    c00c:	0a00000f 	beq	c050 <keyUnlock$>
    c010:	e2845001 	add	r5, r4, #1
    c014:	e7d76005 	ldrb	r6, [r7, r5]
    c018:	e1560008 	cmp	r6, r8
    c01c:	0a00000b 	beq	c050 <keyUnlock$>
    c020:	e2445010 	sub	r5, r4, #16
    c024:	e7d76005 	ldrb	r6, [r7, r5]
    c028:	e1560008 	cmp	r6, r8
    c02c:	0a000007 	beq	c050 <keyUnlock$>
    c030:	e2845010 	add	r5, r4, #16
    c034:	e7d76005 	ldrb	r6, [r7, r5]
    c038:	e1560008 	cmp	r6, r8
    c03c:	0a000003 	beq	c050 <keyUnlock$>
    c040:	e2888001 	add	r8, r8, #1
    c044:	e3580004 	cmp	r8, #4
    c048:	9affffec 	bls	c000 <lookLoop$>
    c04c:	ea000011 	b	c098 <keyDone$>

0000c050 <keyUnlock$>:
    c050:	e3580004 	cmp	r8, #4
    c054:	0a000005 	beq	c070 <exitUnlock$>
    c058:	e3a00000 	mov	r0, #0
    c05c:	e7c70005 	strb	r0, [r7, r5]
    c060:	e1a00005 	mov	r0, r5
    c064:	ebfffd5a 	bl	b5d4 <CellPixels>
    c068:	ebfffd41 	bl	b574 <DrawGrass>
    c06c:	ea000003 	b	c080 <countersUnlock$>

0000c070 <exitUnlock$>:
    c070:	e1a00005 	mov	r0, r5
    c074:	ebfffd56 	bl	b5d4 <CellPixels>
    c078:	ebfffd3d 	bl	b574 <DrawGrass>
    c07c:	ebfffdd1 	bl	b7c8 <YouWin>

0000c080 <countersUnlock$>:
    c080:	e59f01bc 	ldr	r0, [pc, #444]	; c244 <actionSubDone$+0x8>
    c084:	e5901000 	ldr	r1, [r0]
    c088:	e2411001 	sub	r1, r1, #1
    c08c:	e5801000 	str	r1, [r0]
    c090:	ebfffd77 	bl	b674 <DrawKeys>
    c094:	eb000060 	bl	c21c <ActionSubtract>

0000c098 <keyDone$>:
    c098:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000c09c <MoveLeft>:
    c09c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c0a0:	e59f01a4 	ldr	r0, [pc, #420]	; c24c <actionSubDone$+0x10>
    c0a4:	e5904000 	ldr	r4, [r0]
    c0a8:	e2445001 	sub	r5, r4, #1
    c0ac:	e59f7194 	ldr	r7, [pc, #404]	; c248 <actionSubDone$+0xc>
    c0b0:	e7d76005 	ldrb	r6, [r7, r5]
    c0b4:	e1a00004 	mov	r0, r4
    c0b8:	e1a01005 	mov	r1, r5
    c0bc:	e1a02007 	mov	r2, r7
    c0c0:	e1a03006 	mov	r3, r6
    c0c4:	eb000024 	bl	c15c <MoveCheck>
    c0c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c0cc <MoveRight>:
    c0cc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c0d0:	e59f0174 	ldr	r0, [pc, #372]	; c24c <actionSubDone$+0x10>
    c0d4:	e5904000 	ldr	r4, [r0]
    c0d8:	e2845001 	add	r5, r4, #1
    c0dc:	e59f7164 	ldr	r7, [pc, #356]	; c248 <actionSubDone$+0xc>
    c0e0:	e7d76005 	ldrb	r6, [r7, r5]
    c0e4:	e1a00004 	mov	r0, r4
    c0e8:	e1a01005 	mov	r1, r5
    c0ec:	e1a02007 	mov	r2, r7
    c0f0:	e1a03006 	mov	r3, r6
    c0f4:	eb000018 	bl	c15c <MoveCheck>
    c0f8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c0fc <MoveUp>:
    c0fc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c100:	e59f0144 	ldr	r0, [pc, #324]	; c24c <actionSubDone$+0x10>
    c104:	e5904000 	ldr	r4, [r0]
    c108:	e2445010 	sub	r5, r4, #16
    c10c:	e59f7134 	ldr	r7, [pc, #308]	; c248 <actionSubDone$+0xc>
    c110:	e7d76005 	ldrb	r6, [r7, r5]
    c114:	e1a00004 	mov	r0, r4
    c118:	e1a01005 	mov	r1, r5
    c11c:	e1a02007 	mov	r2, r7
    c120:	e1a03006 	mov	r3, r6
    c124:	eb00000c 	bl	c15c <MoveCheck>
    c128:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c12c <MoveDown>:
    c12c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c130:	e59f0114 	ldr	r0, [pc, #276]	; c24c <actionSubDone$+0x10>
    c134:	e5904000 	ldr	r4, [r0]
    c138:	e2845010 	add	r5, r4, #16
    c13c:	e59f7104 	ldr	r7, [pc, #260]	; c248 <actionSubDone$+0xc>
    c140:	e7d76005 	ldrb	r6, [r7, r5]
    c144:	e1a00004 	mov	r0, r4
    c148:	e1a01005 	mov	r1, r5
    c14c:	e1a02007 	mov	r2, r7
    c150:	e1a03006 	mov	r3, r6
    c154:	eb000000 	bl	c15c <MoveCheck>
    c158:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c15c <MoveCheck>:
    c15c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c160:	e1a04000 	mov	r4, r0
    c164:	e1a05001 	mov	r5, r1
    c168:	e1a06002 	mov	r6, r2
    c16c:	e1a07003 	mov	r7, r3
    c170:	e1a00004 	mov	r0, r4
    c174:	e1a01005 	mov	r1, r5
    c178:	e1a02006 	mov	r2, r6
    c17c:	e3570000 	cmp	r7, #0
    c180:	0a000007 	beq	c1a4 <grassMove$>
    c184:	e3570001 	cmp	r7, #1
    c188:	0a00000e 	beq	c1c8 <doneMove$>
    c18c:	e3570002 	cmp	r7, #2
    c190:	0a000005 	beq	c1ac <keyMove$>
    c194:	e3570003 	cmp	r7, #3
    c198:	0a00000a 	beq	c1c8 <doneMove$>
    c19c:	e3570004 	cmp	r7, #4
    c1a0:	0a000008 	beq	c1c8 <doneMove$>

0000c1a4 <grassMove$>:
    c1a4:	eb000008 	bl	c1cc <Moved>
    c1a8:	ea000006 	b	c1c8 <doneMove$>

0000c1ac <keyMove$>:
    c1ac:	eb000006 	bl	c1cc <Moved>
    c1b0:	e59f008c 	ldr	r0, [pc, #140]	; c244 <actionSubDone$+0x8>
    c1b4:	e5901000 	ldr	r1, [r0]
    c1b8:	e2811001 	add	r1, r1, #1
    c1bc:	e5801000 	str	r1, [r0]
    c1c0:	ebfffd2b 	bl	b674 <DrawKeys>
    c1c4:	eaffffff 	b	c1c8 <doneMove$>

0000c1c8 <doneMove$>:
    c1c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c1cc <Moved>:
    c1cc:	e92d4070 	push	{r4, r5, r6, lr}
    c1d0:	e1a04000 	mov	r4, r0
    c1d4:	e1a05001 	mov	r5, r1
    c1d8:	e1a06002 	mov	r6, r2
    c1dc:	e3a00000 	mov	r0, #0
    c1e0:	e7c60004 	strb	r0, [r6, r4]
    c1e4:	e3a00005 	mov	r0, #5
    c1e8:	e7c60005 	strb	r0, [r6, r5]
    c1ec:	e59f0058 	ldr	r0, [pc, #88]	; c24c <actionSubDone$+0x10>
    c1f0:	e5805000 	str	r5, [r0]
    c1f4:	e1a00004 	mov	r0, r4
    c1f8:	ebfffcf5 	bl	b5d4 <CellPixels>
    c1fc:	ebfffcdc 	bl	b574 <DrawGrass>
    c200:	ebfffd87 	bl	b824 <DrawStart>
    c204:	e1a00005 	mov	r0, r5
    c208:	ebfffcf1 	bl	b5d4 <CellPixels>
    c20c:	ebfffce8 	bl	b5b4 <DrawCharacter>
    c210:	ebfffcff 	bl	b614 <DrawGrid>
    c214:	eb000000 	bl	c21c <ActionSubtract>
    c218:	e8bd8070 	pop	{r4, r5, r6, pc}

0000c21c <ActionSubtract>:
    c21c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    c220:	e59f0028 	ldr	r0, [pc, #40]	; c250 <actionSubDone$+0x14>
    c224:	e5901000 	ldr	r1, [r0]
    c228:	e2411001 	sub	r1, r1, #1
    c22c:	e5801000 	str	r1, [r0]
    c230:	e3510000 	cmp	r1, #0
    c234:	1a000000 	bne	c23c <actionSubDone$>
    c238:	ebfffd4b 	bl	b76c <YouLose>

0000c23c <actionSubDone$>:
    c23c:	ebfffd26 	bl	b6dc <DrawActions>
    c240:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    c244:	00009080 	.word	0x00009080
    c248:	0000925e 	.word	0x0000925e
    c24c:	00009088 	.word	0x00009088
    c250:	00009084 	.word	0x00009084

0000c254 <DrawSquare>:
    c254:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    c258:	e1a04000 	mov	r4, r0
    c25c:	e1a05001 	mov	r5, r1
    c260:	e1a06002 	mov	r6, r2
    c264:	e3a07000 	mov	r7, #0
    c268:	e3a08000 	mov	r8, #0

0000c26c <squareLoop$>:
    c26c:	e1a00007 	mov	r0, r7
    c270:	e0800004 	add	r0, r0, r4
    c274:	e1a01008 	mov	r1, r8
    c278:	e0811005 	add	r1, r1, r5
    c27c:	e1a02006 	mov	r2, r6
    c280:	ebfffdb4 	bl	b958 <DrawPixel>
    c284:	e2877001 	add	r7, r7, #1
    c288:	e357002f 	cmp	r7, #47	; 0x2f
    c28c:	dafffff6 	ble	c26c <squareLoop$>
    c290:	e3a07000 	mov	r7, #0
    c294:	e2888001 	add	r8, r8, #1
    c298:	e358002f 	cmp	r8, #47	; 0x2f
    c29c:	dafffff2 	ble	c26c <squareLoop$>
    c2a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000c2a4 <DrawLineY>:
    c2a4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c2a8:	e1a04000 	mov	r4, r0
    c2ac:	e1a05001 	mov	r5, r1
    c2b0:	e1a07002 	mov	r7, r2
    c2b4:	e1a06003 	mov	r6, r3

0000c2b8 <lineYLoop$>:
    c2b8:	e1a00004 	mov	r0, r4
    c2bc:	e1a01005 	mov	r1, r5
    c2c0:	e1a02007 	mov	r2, r7
    c2c4:	ebfffda3 	bl	b958 <DrawPixel>
    c2c8:	e2855001 	add	r5, r5, #1
    c2cc:	e1550006 	cmp	r5, r6
    c2d0:	1afffff8 	bne	c2b8 <lineYLoop$>
    c2d4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000c2d8 <DrawLineX>:
    c2d8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    c2dc:	e1a04000 	mov	r4, r0
    c2e0:	e1a05001 	mov	r5, r1
    c2e4:	e1a07002 	mov	r7, r2
    c2e8:	e1a06003 	mov	r6, r3

0000c2ec <lineXLoop$>:
    c2ec:	e1a00004 	mov	r0, r4
    c2f0:	e1a01005 	mov	r1, r5
    c2f4:	e1a02007 	mov	r2, r7
    c2f8:	ebfffd96 	bl	b958 <DrawPixel>
    c2fc:	e2844001 	add	r4, r4, #1
    c300:	e1540006 	cmp	r4, r6
    c304:	1afffff8 	bne	c2ec <lineXLoop$>
    c308:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
